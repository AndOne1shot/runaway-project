<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.HyunHoDAO">
	<resultMap id="snsResultMap"
		type="com.example.demo.model.SnsBoard">
		<id property="sns_no" column="sns_no" />
		<result property="user_id" column="user_id" />
		<result property="sns_address1" column="sns_address1" />
		<result property="sns_address2" column="sns_address2" />
		<result property="sns_subject" column="sns_subject" />
		<result property="sns_content" column="sns_content" />
		<result property="sns_date" column="sns_date" />
		<result property="sns_proofshot" column="sns_proofshot" />
		<result property="sns_good" column="sns_good" />
		<result property="sns_readcount" column="sns_readcount" />
	</resultMap>



	<select id="getTotalLiked" parameterType="String"
		resultType="int">
		select count(*)
		from sns s
		join good g on s.sns_no = g.sns_no
		where g.user_id = #{user_id}
	</select>



	<select id="getLikedPosts" parameterType="java.util.Map"
		resultMap="snsResultMap">
		select * from (
		select s.*, row_number() over (order by
		s.sns_no desc) as rn
		from sns s
		join good g on s.sns_no = g.sns_no
		where
		g.user_id = #{user_id}
		)
		where rn between #{startRow} and #{endRow}
	</select>





</mapper>