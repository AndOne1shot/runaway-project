<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.MateReplyDAO">

	<!-- Use type aliases to avoid typing the full classname every time. -->
	<resultMap id="rbResult"          type="rb">
		<result property="recruit_r_no"	      column="recruit_r_no" />
		<result property="recruit_no"    	  column="recruit_no" />
		<result property="user_id"  		  column="user_id" />
		<result property="recruit_r_step"     column="recruit_r_step" />
		<result property="recruit_r_level"    column="recruit_r_level" />
		<result property="recruit_r_content"  column="recruit_r_content" />
		<result property="recruit_r_date" 	  column="recruit_r_date" />
		<result property="recruit_r_ref" 	  column="recruit_r_ref" />
		<result property="recruit_r_del" 	  column="recruit_r_del" />
		<result property="recruit_r_parent"   column="recruit_r_parent" />
	</resultMap>
	
	<resultMap id="srbResult"          type="srb">
		<result property="sns_r_no"	      column="sns_r_no" />
		<result property="sns_no"    	  column="sns_no" />
		<result property="user_id"  	  column="user_id" />
		<result property="sns_r_step"     column="sns_r_step" />
		<result property="sns_r_level"    column="sns_r_level" />
		<result property="sns_r_content"  column="sns_r_content" />
		<result property="sns_r_date" 	  column="sns_r_date" />
		<result property="sns_r_ref" 	  column="sns_r_ref" />
		<result property="sns_r_del" 	  column="sns_r_del" />
		<result property="sns_r_parent"   column="sns_r_parent" />
	</resultMap>
	
	<select id="list" parameterType="int" resultMap="rbResult">
<!-- 		select * from recruit_r where recruit_no=#{num} order by recruit_r_no -->
<!-- 			select * from (select a.*,rowNum rn from ( -->
<!-- 				select * from recruit_r	where recruit_no=#{recruit_no}			 -->
<!-- 				order by recruit_r_count, recruit_r_step) a ) -->
				
			select * from (select a.*,rowNum rn from (
			select * from recruit_r				
			 order by recruit_r_ref, recruit_r_step) a ) where recruit_no = #{recruit_no}
			
	</select>
	
	
	<select id="select" parameterType="int" resultType="rb">
		select * from recruit_r where recruit_r_no=#{rno}
	</select>
	
	
	
	<insert id="insert" parameterType="rb" >
<!-- 		<selectKey keyProperty="recruit_r_no" order="BEFORE" resultType="int"> -->
<!-- 			select nvl(max(recruit_r_no),0) + 1 from recruit_r -->
<!-- 		</selectKey> -->
			insert into recruit_r values (
			recruit_r_no_seq.nextval,
			#{recruit_no},
			#{user_id},
			#{recruit_r_step},
			#{recruit_r_level},
			#{recruit_r_content},
			sysdate,
			#{recruit_r_ref},
			#{recruit_r_del},
			#{recruit_r_parent}
			)
	</insert>
	
	
	
	<update id="update" parameterType="rb">
		update recruit_r set recruit_r_content=#{recruit_r_content},
			recruit_r_date=sysdate where recruit_r_no=#{recruit_r_no} 
	</update>
	
	<delete id="delete" parameterType="int">
		delete from recruit_r where recruit_r_no=#{recruit_r_no}
	</delete>
	
	<select id="getMaxNum" resultType="int">
		select nvl((count(*)),0)+1 from recruit_r
	</select>

	<select id="getMaxNum2" resultType="int">
		select nvl(max(recruit_r_step), 0)+1 from recruit_r where recruit_r_parent= #{recruit_r_no} 
	</select>
	
<!-- 	<select id="getMaxNum2" resultType="int"> -->
<!-- 		select count(recruit_r_step)+1 from recruit_r where recruit_r_del= #{recruit_r_no}  -->
<!-- 	</select> -->
	
	
	
	
	<update id="updateRe" parameterType="rb">
		update recruit_r set recruit_r_step = recruit_r_step + 1
			where recruit_r_parent=#{recruit_r_no} and recruit_r_step > #{recruit_r_step}
		
	</update>
	
	
	
	<select id="getChild" parameterType="int">
<!-- 		select nvl(max(recruit_r_step),0) from recruit_r where recruit_r_del = #{recruit_r_no} -->
		    select nvl(min(recruit_r_step),0) from recruit_r where recruit_r_step > #{recruit_r_step} 
		    	and recruit_r_level &lt;= #{recruit_r_level} and recruit_r_ref = #{recruit_r_ref} order by recruit_r_step
		
	</select>	
	
	
	
	
	<update id="updateStep" parameterType="rb">
		update recruit_r set recruit_r_step = recruit_r_step + 1 
			where recruit_r_ref=#{recruit_r_ref} and recruit_r_step >= #{recruit_r_step}
	
	</update>
	
	
	<select id="rgetdetail" parameterType="int" resultType="recruit">
		select * from recruit where recruit_no=#{no}
	</select>
	
	
	
	<select id="srgetDetail" parameterType="int" resultType="sns">
		select * from sns where sns_no=#{no}
	</select>
	
	
	
	<select id="srList" parameterType="int" resultMap="srbResult">				
			select * from (select a.*,rowNum rn from (
			select * from sns_r				
			 order by sns_r_ref, sns_r_step) a ) where sns_no = #{sns_no}			
	</select>
	
	<delete id="srDelete" parameterType="int">
		delete from sns_r where sns_r_no=#{sns_r_no}
	</delete>
	
	<select id="getSrMaxNum" resultType="int">
		select nvl((count(*)),0)+1 from sns_r
	</select>
	
	<select id="srSelect" parameterType="int" resultMap="srbResult">	
		select * from sns_r where sns_r_no=#{rno}
	</select>
	
	<insert id="srInsert" parameterType="srb" >
			insert into sns_r values (
			sns_r_no_seq.nextval,
			#{sns_no},
			#{user_id},
			#{sns_r_step},
			#{sns_r_level},
			#{sns_r_content},
			sysdate,
			#{sns_r_ref},
			#{sns_r_del},
			#{sns_r_parent}
			)
	</insert>
	
	<select id="getSrMaxNum2" resultType="int">
		select nvl(max(sns_r_step), 0)+1 from sns_r where sns_r_parent= #{sns_r_no} 
	</select>
	
	<select id="getSrChild" parameterType="int">
		    select nvl(min(sns_r_step),0) from sns_r where sns_r_step > #{sns_r_step} 
		    	and sns_r_level &lt;= #{sns_r_level} and sns_r_ref = #{sns_r_ref} order by sns_r_step
		
	</select>	
	
	<update id="updateSrStep" parameterType="srb">
		update sns_r set sns_r_step = sns_r_step + 1 
			where sns_r_ref=#{sns_r_ref} and sns_r_step >= #{sns_r_step}	
	</update>
	
	
</mapper>